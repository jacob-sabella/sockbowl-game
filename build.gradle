plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'cz.habarta.typescript-generator' version '3.2.1263'
}

group = 'com.soulsoftworks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'
    implementation 'org.springframework.cloud:spring-cloud-dependencies:2022.0.1'
    implementation 'io.github.openfeign:feign-okhttp:12.1'
    implementation 'io.github.openfeign:feign-httpclient:12.1'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.redis.om:redis-om-spring:0.6.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:testcontainers:1.17.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
    testImplementation 'com.redis.testcontainers:testcontainers-redis-junit-jupiter:1.4.6'
    testImplementation 'org.awaitility:awaitility:4.0.3'
    testImplementation 'org.springframework.kafka:spring-kafka-test'


}

tasks.named('test') {
    useJUnitPlatform()
}

generateTypeScript {
    jsonLibrary = 'jackson2'
    classPatterns = [
            'com.soulsoftworks.sockbowlgame.model.packet.*',
            'com.soulsoftworks.sockbowlgame.model.state.*'
    ]
    excludeClasses = [
            'com.soulsoftworks.sockbowlgame.model.state.GameSessionSanitizer',
            'com.soulsoftworks.sockbowlgame.model.state.PlayerSettingsByGameMode'
    ]
    outputKind = 'module'
    outputFile = "build/typescript-generation/sockbowl-interfaces.d.ts"
}

test {
    useJUnitPlatform()
}